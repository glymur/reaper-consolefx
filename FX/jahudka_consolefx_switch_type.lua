-- ReaScript Name: Switch which Airwindows console type is active for the selected tracks
-- Version: 2.0
-- Author: jahudka
-- Links:
--   Documentation https://github.com/jahudka/reaper-consolefx
-- Changelog:
--   v2.0 (2020-12-21)
--    - extracted utility methods to *_utils.lua
--    - added support for Console 7 Cascade
--   v1.3 (2020-12-09)
--    - added support for Console 7
--   v1.2 (2020-02-16)
--    - added a brief description and a documentation link to the About section
--   v1.1 (2020-01-05)
--    - added all the Console types
--    - document the fact that you probably don't need to edit this script's configuration
--   v1.0 (2020-01-05)
--    - initial release
-- About:
--   This script can be used to switch the active Airwindows Console effect
--   inside the post-fader routing matrix generated by the `*_create_busses.lua` script.
--   See https://github.com/jahudka/reaper-consolefx#switching-the-active-console-type
--   for an usage overview.

-- HELPERS

package.path = (function ()
    local info = debug.getinfo(1, 'S')
    local s = package.config:sub(1, 1)
    return info.source:sub(2):gsub(s .. '[^' .. s .. ']+$', '') .. s .. '?.lua;' .. package.path
end)()

require('jahudka_consolefx_utils')

if not log then
    reaper.MB("This script depends on 'jahudka_consolefx_utils.lua' but it appears it isn't installed! Please install it first and then run this script again.", "Whoops!", 0)
end

local function find_next_console_type(track)
    local plugins = find_console_plugins(track)

    if #plugins < 1 then
        return nil
    end

    local found = false

    for _, plugin in ipairs(plugins) do
        if plugin.offline and found then
            return plugin.type
        elseif not plugin.offline and not found then
            found = true
        end
    end

    return found and plugins[1].type or nil
end

-- END HELPERS

-- MAIN

local function switch_console_types()
    local tracks = get_target_tracks()

    if #tracks < 1 then
        return
    end

    local next_type = find_next_console_type(tracks[1])

    if next_type == nil then
        return
    end

    reaper.Undo_BeginBlock()

    for _, track in ipairs(tracks) do
        for _, plugin in ipairs(find_console_plugins(track)) do
            if plugin.type == next_type and plugin.offline or plugin.type ~= next_type and not plugin.offline then
                reaper.TrackFX_SetOffline(track, plugin.index, not plugin.offline)
            end

            if not plugin.enabled then
                reaper.TrackFX_SetEnabled(track, plugin.index, true)
            end
        end
    end

    reaper.Undo_EndBlock('Switch Airwindows Console type', -1)
end

switch_console_types()
